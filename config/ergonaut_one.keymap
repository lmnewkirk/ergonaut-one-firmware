#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&caps_word {
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        backup-bt {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jk_RPar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            layers = <0>;
        };

        kl_RBkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <20 21>;
            layers = <0>;
        };

        lquot_RBrc {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <21 22>;
            layers = <0>;
        };

        df_LPar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 15>;
            layers = <0>;
        };

        sd_LBkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <14 15>;
            layers = <0>;
        };

        as_LBrc {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <13 14>;
            layers = <0>;
        };

        capsWord {
            bindings = <&caps_word>;
            key-positions = <12 23>;
            layers = <0>;
        };

        game_mode {
            bindings = <&tog 5>;
            key-positions = <38 39>;
            layers = <0>;
        };

        mcomm_colon {
            bindings = <&kp COLON>;
            key-positions = <32 31>;
        };

        commdot_semi {
            bindings = <&kp SEMI>;
            key-positions = <32 33>;
        };
    };

    behaviors {
        shift_del: shift_del {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bksp_num: bksp_num {
            compatible = "zmk,behavior-hold-tap";
            label = "BKSP_NUM";
            bindings = <&lt>, <&shift_del>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            flavor = "hold-preferred";
            tapping-term-ms = <100>;
            quick-tap-ms = <100>;
        };

        gui_spc_ht: gui_spc_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "GUI_SPC_HT";
            bindings = <&kp>, <&gui_spc>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <36>;
        };

        sym_alt_spc: sym_alt_spc {
            compatible = "zmk,behavior-hold-tap";
            label = "SYM_ALT_SPC";
            bindings = <&lt>, <&alt_spc>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <41>;
        };

        bt_clears: bt_clears {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_CLEARS";
            bindings = <&bt BT_CLR>, <&bt BT_CLR_ALL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        gui_spc: gui_spc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "GUI_SPC";
        };

        alt_spc: alt_spc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE)>;
            label = "ALT_SPC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAIN";
            bindings = <
&kp LEFT_ALT      &kp Q  &kp W  &kp E                   &kp R      &kp T      &kp Y      &kp U          &kp I             &kp O    &kp P     &mt RIGHT_ALT K_PLAY_PAUSE
&kp LSHIFT        &kp A  &kp S  &kp D                   &kp F      &kp G      &kp H      &kp J          &kp K             &kp L    &kp SQT   &kp RSHIFT
&mt LCTRL ESCAPE  &kp Z  &kp X  &kp C                   &kp V      &kp B      &kp N      &kp M          &kp COMMA         &kp DOT  &kp FSLH  &mt RCTRL BACKSLASH
                                &gui_spc_ht LEFT_GUI 0  &lt 4 TAB  &lt 3 RET  &kp SPACE  &bksp_num 1 0  &sym_alt_spc 2 0
            >;
        };

        number_layer {
            display-name = "NUM";
            bindings = <
&kp TAB                 &kp GRAVE       &kp N7        &kp N8        &kp N9        &kp EQUAL      &kp F7     &kp F8    &kp F9    &kp F10   &kp F11   &mt RIGHT_ALT F12
&mt LSHFT PLUS          &kp PIPE        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp TILDE      &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RIGHT_SHIFT MINUS
&mt LEFT_CONTROL EQUAL  &kp UNDERSCORE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSPACE  &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp RIGHT_CONTROL
                                                      &kp SPACE     &kp N0        &trans         &kp SPACE  &trans    &trans
            >;
        };

        sym_layer {
            display-name = "SYM";
            bindings = <
&kp TAB         &kp KP_SLASH  &kp LS(KP_N7)  &kp LS(KP_N8)  &kp LS(KP_N9)  &kp KP_MINUS  &trans  &trans  &kp F7  &kp F8  &kp F9  &kt F10
&kp LEFT_SHIFT  &kp EQUAL     &kp LS(KP_N4)  &kp LS(KP_N5)  &kp LS(KP_N6)  &kp KP_PLUS   &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11
&kp LCTRL       &kp UNDER     &kp LS(N1)     &kp LS(KP_N2)  &kp LS(KP_N3)  &kp PIPE      &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12
                                             &trans         &kp MINUS      &trans        &trans  &trans  &trans
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
&bootloader  &trans  &kp LG(N7)        &kp LG(N8)        &kp LG(N9)        &none   &kp LG(LEFT_ARROW)  &kp LG(DOWN)  &kp LG(UP_ARROW)  &kp LG(RIGHT)  &kp HOME       &kp END
&trans       &trans  &kp LG(NUMBER_4)  &kp LG(N5)        &kp LG(NUMBER_6)  &trans  &kp LEFT_ARROW      &kp DOWN      &kp UP_ARROW      &kp RIGHT      &kp PAGE_DOWN  &kp PAGE_UP
&sys_reset   &none   &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &none   &none               &none         &none             &none          &none          &sys_reset
                                       &kp LEFT_GUI      &kp LG(N0)        &trans  &trans              &trans        &trans
            >;
        };

        media_layer {
            bindings = <
&bootloader     &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4      &bootloader
&kp LEFT_SHIFT  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &kp C_PREVIOUS  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT    &kp C_PLAY_PAUSE  &kp RIGHT_SHIFT
&bt_clears      &out OUT_TOG   &sys_reset     &trans         &trans         &trans         &kp K_MUTE      &trans        &trans           &sys_reset    &out OUT_TOG      &bt_clears
                                              &trans         &trans         &trans         &trans          &trans        &trans
            >;

            label = "MED";
        };

        game_layer {
            display-name = "GAME";
            bindings = <
&mt LEFT_ALT ESCAPE  &kp Q  &kp W  &kp E                   &kp R      &kp T      &kp Y        &kp U          &kp I             &kp O    &kp P     &mt RIGHT_ALT K_PLAY_PAUSE
&kp LSHIFT           &kp A  &kp S  &kp D                   &kp F      &kp G      &kp H        &kp J          &kp K             &kp L    &kp SQT   &kp RSHIFT
&kp LCTRL            &kp Z  &kp X  &kp C                   &kp V      &kp B      &kp N        &kp M          &kp COMMA         &kp DOT  &kp FSLH  &mt RCTRL BACKSLASH
                                   &gui_spc_ht LEFT_GUI 0  &lt 4 TAB  &kp SPACE  &lt 3 ENTER  &bksp_num 1 0  &sym_alt_spc 2 0
            >;
        };
    };
};
